- name: gender
  imports:
  - '"golang.org/x/exp/slices"'
  basetype: byte
  init: |-
    const (
        M Gender = iota
        F
        Unknown Gender = 255
    )
    var set []string
    func init() {
        set = []string{"M", "F"}
    }
  random: rand.Intn(Len())
  length: len(set)
  unknown: Unknown
  toString: set[c]
  fromString: byte(slices.Index(set, s))
  postgresType: smallint
- name: platform
  imports:
  - '"golang.org/x/exp/slices"'
  basetype: byte
  init: |-
    const (
        Android Platform = iota
        IOS
        Web
        Unknown Platform = 255
    )
    var set []string
    func init() {
        set = []string{"android", "ios", "web"}
    }
  random: rand.Intn(Len())
  length: len(set)
  unknown: Unknown
  toString: set[c]
  fromString: byte(slices.Index(set, s))
  postgresType: smallint
- name: country
  imports:
  - '"github.com/biter777/countries"'
  basetype: countries.CountryCode
  init: |-
    var set []countries.CountryCode
    func init() {
        set = countries.All()
    }
  random: set[rand.Intn(Len())]
  length: len(set)
  unknown: Country(countries.Unknown)
  toString: countries.CountryCode(c).Alpha2()
  fromString: countries.ByName(s)
  postgresType: bigint
